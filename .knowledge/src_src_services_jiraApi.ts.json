{"is_source_file": true, "format": "TypeScript", "description": "This file defines a JiraApiService class that provides methods to interact with Jira's REST API, including credential verification, fetching projects, project details, and issues by type. It handles authentication, API calls, and error handling.", "external_files": ["../types/jira"], "external_methods": [], "published": ["jiraApi"], "classes": [{"name": "JiraApiService", "description": "A service class providing methods to interact with Jira's REST API, including authentication, project retrieval, and issue fetching."}], "methods": [{"name": "private createAuthHeader(credentials: JiraCredentials): string { createAuthHeader", "description": "Creates a Basic Auth header using JiraCredentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "private getProxyBaseUrl(): string { getProxyBaseUrl", "description": "Returns the fixed proxy base URL for all API calls.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async verifyCredentials(credentials: JiraCredentials): Promise<boolean> { verifyCredentials", "description": "Verifies Jira credentials by calling the 'myself' endpoint.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> { fetchProjects", "description": "Fetches list of Jira projects accessible with the provided credentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/ fetchProjectDetails", "description": "Retrieves detailed information about a specific Jira project by its key.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchIssuesByType(credentials: JiraCredentials, projectKey: string, issueTypeId: string)/ fetchIssuesByType", "description": "Fetches issues from a Jira project filtered by issue type.", "scope": "JiraApiService", "scopeKind": "class"}], "calls": ["fetch", "console.error"], "search-terms": ["JiraApiService", "verifyCredentials", "fetchProjects", "fetchProjectDetails", "fetchIssuesByType"], "state": 2, "file_id": 49, "knowledge_revision": 123, "git_revision": "824d37dd92dbc2f13347a49f4ee72c9b186e4b45", "ctags": [{"_type": "tag", "name": "JiraApiService", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^class JiraApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^    const auth = btoa(`${credentials.email}:${credentials.apiToken}`);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.createAuthHeader", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "createAuthHeader", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  private createAuthHeader(credentials: JiraCredentials): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const data = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "fetchIssuesByType", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  async fetchIssuesByType(credentials: JiraCredentials, projectKey: string, issueTypeId: string)/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjectDetails", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjects", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "getProxyBaseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  private getProxyBaseUrl(): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "jiraApi", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^export const jiraApi = new JiraApiService();/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "jql", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const jql = `project = ${projectKey} AND issuetype = ${issueTypeId}`;$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "project", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const project: JiraProject = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "projects", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const projects: JiraProject[] = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/myself`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project\\/${projectKey}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/search?jql=${encodeURIComponent(jq/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "verifyCredentials", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/src/services/jiraApi.ts", "pattern": "/^  async verifyCredentials(credentials: JiraCredentials): Promise<boolean> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}], "hash": "192ca1cd8fdec7095a6c997d7bcca709", "format-version": 4, "code-base-name": "frontend", "filename": "src/src/services/jiraApi.ts", "revision_history": [{"123": "824d37dd92dbc2f13347a49f4ee72c9b186e4b45"}]}