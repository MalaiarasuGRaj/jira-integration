{"is_source_file": true, "format": "TypeScript", "description": "Defines a JiraApiService class that provides methods for authenticating and interacting with Jira API endpoints, including verifying credentials, fetching project lists, and fetching project details.", "external_files": ["../types/jira"], "external_methods": ["btoa", "fetch"], "published": ["jiraApi"], "classes": [{"name": "JiraApiService", "description": "A service class encapsulating methods for Jira API interactions, such as credential verification, project retrieval, and project detail fetching."}], "methods": [{"name": "private createAuthHeader(credentials: JiraCredentials): string { createAuthHeader", "description": "Generates a Basic Auth header string using provided Jira credentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "private getProxyBaseUrl(): string { getProxyBaseUrl", "description": "Returns the base URL used as a proxy for all Jira API calls.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async verifyCredentials(credentials: JiraCredentials): Promise<boolean> { verifyCredentials", "description": "Verifies the provided Jira credentials by calling the 'myself' endpoint.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> { fetchProjects", "description": "Fetches the list of Jira projects using provided credentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/ fetchProjectDetails", "description": "Fetches detailed information for a specific Jira project by project key.", "scope": "JiraApiService", "scopeKind": "class"}], "calls": ["this.createAuthHeader", "fetch", "this.getProxyBaseUrl()", "console.error", "response.ok", "response.json"], "search-terms": ["JiraApiService", "verifyCredentials", "fetchProjects", "fetchProjectDetails", "proxy base URL"], "state": 2, "file_id": 37, "knowledge_revision": 84, "git_revision": "2af2cc2fa90e24524d5a16f6c63b1adaac0c3b70", "ctags": [{"_type": "tag", "name": "JiraApiService", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^class JiraApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^    const auth = btoa(`${credentials.email}:${credentials.apiToken}`);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.createAuthHeader", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getProxyBaseUrl(); \\/\\/ Use the proxy base URL$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "createAuthHeader", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^  private createAuthHeader(credentials: JiraCredentials): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjectDetails", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjects", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "getProxyBaseUrl", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^  private getProxyBaseUrl(): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "jiraApi", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^export const jiraApi = new JiraApiService();/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "project", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const project: JiraProject = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "projects", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const projects: JiraProject[] = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/myself`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project\\/${projectKey}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "verifyCredentials", "path": "/home/kavia/workspace/cm543c1f6d/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async verifyCredentials(credentials: JiraCredentials): Promise<boolean> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}], "hash": "8394c48fa0edc44e3c4cdef15efbc5e7", "format-version": 4, "code-base-name": "frontend", "filename": "src/services/jiraApi.ts", "revision_history": [{"84": "2af2cc2fa90e24524d5a16f6c63b1adaac0c3b70"}]}