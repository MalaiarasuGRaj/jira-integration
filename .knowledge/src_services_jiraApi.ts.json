{"is_source_file": true, "format": "TypeScript", "description": "This file defines a JiraApiService class that provides methods to verify credentials, fetch project lists, fetch project details, and fetch issues by type from Jira's REST API. It encapsulates API interaction logic and handles authentication header creation and URL formation.", "external_files": ["../types/jira"], "external_methods": [], "published": ["jiraApi"], "classes": [{"name": "JiraApiService", "description": "A service class for interacting with Jira's REST API, handling authentication, project retrieval, and issue queries."}], "methods": [{"name": "private createAuthHeader(credentials: JiraCredentials): string { createAuthHeader", "description": "Generates a Basic Auth header value using the provided JiraCredentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "private getBaseUrl(domain: string): string { getBaseUrl", "description": "Constructs a full URL by adding https:// prefix if not present.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async verifyCredentials(credentials: JiraCredentials): Promise<boolean> { verifyCredentials", "description": "Verifies provided Jira credentials by sending a request to the 'myself' endpoint.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> { fetchProjects", "description": "Retrieves a list of Jira projects accessible with the provided credentials.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/ fetchProjectDetails", "description": "Fetches detailed information about a specific Jira project identified by projectKey.", "scope": "JiraApiService", "scopeKind": "class"}, {"name": "async fetchIssuesByType(credentials: JiraCredentials, projectKey: string, issueTypeId: string)/ fetchIssuesByType", "description": "Retrieves issues from a project filtered by issue type ID using Jira Query Language.", "scope": "JiraApiService", "scopeKind": "class"}], "calls": ["fetch", "console.error", "response.ok", "response.json"], "search-terms": ["JiraApiService", "verifyCredentials", "fetchProjects", "fetchProjectDetails", "fetchIssuesByType", "rest/api/3"], "state": 2, "file_id": 45, "knowledge_revision": 117, "git_revision": "0057c2e263e398ec8e2478d8c9dc95abe4f541d5", "ctags": [{"_type": "tag", "name": "JiraApiService", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^class JiraApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^    const auth = btoa(`${credentials.email}:${credentials.apiToken}`);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.createAuthHeader", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getBaseUrl(credentials.domain);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getBaseUrl(credentials.domain);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getBaseUrl(credentials.domain);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const baseUrl = this.getBaseUrl(credentials.domain);$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "createAuthHeader", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  private createAuthHeader(credentials: JiraCredentials): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const data = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "fetchIssuesByType", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async fetchIssuesByType(credentials: JiraCredentials, projectKey: string, issueTypeId: string)/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjectDetails", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async fetchProjectDetails(credentials: JiraCredentials, projectKey: string): Promise<JiraProje/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "fetchProjects", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async fetchProjects(credentials: JiraCredentials): Promise<JiraProject[]> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "getBaseUrl", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  private getBaseUrl(domain: string): string {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}, {"_type": "tag", "name": "jiraApi", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^export const jiraApi = new JiraApiService();/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "jql", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const jql = `project = ${projectKey} AND issuetype = ${issueTypeId}`;$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "project", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const project: JiraProject = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "projects", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const projects: JiraProject[] = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/myself`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.verifyCredentials", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project\\/${projectKey}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjectDetails", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/project`, {$/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchProjects", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^      const response = await fetch(`${baseUrl}\\/rest\\/api\\/3\\/search?jql=${encodeURIComponent(jq/", "language": "TypeScript", "kind": "constant", "scope": "JiraApiService.fetchIssuesByType", "scopeKind": "method"}, {"_type": "tag", "name": "verifyCredentials", "path": "/home/kavia/workspace/cm484c6cc9/jira-integration/src/services/jiraApi.ts", "pattern": "/^  async verifyCredentials(credentials: JiraCredentials): Promise<boolean> {$/", "language": "TypeScript", "kind": "method", "scope": "JiraApiService", "scopeKind": "class"}], "hash": "8a0594bf223c0f4edffd7a60d9fbc89e", "format-version": 4, "code-base-name": "frontend", "filename": "src/services/jiraApi.ts", "revision_history": [{"117": "0057c2e263e398ec8e2478d8c9dc95abe4f541d5"}]}